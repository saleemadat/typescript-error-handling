version: 2.1

docker-image: &docker-image
  docker:
    - image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/nate-$AWS_REGION-builds-nodejs-ecr:nate-nodejs-v12
      aws_auth:
        aws_access_key_id: $AWS_ACCESS_KEY_ID
        aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

pr_filters: &pr_filters
  filters:
    branches:
      ignore:
        - staging
        - master
        - develop

dev_filters: &dev_filters
  filters:
    branches:
      only:
        - develop

staging_filters: &staging_filters
  filters:
    branches:
      only:
        - staging

prod_filters: &prod_filters
  filters:
    branches:
      only:
        - master

orbs:
  nate-orbs: nate/orbs@0.2.0

commands:
  check-commit-author:
    steps:
      - run:
          name: Check commit author
          command: |
            AUTHOR="$(git show -s --format=%an)"
            if [ "${AUTHOR}" = ${GIT_MACHINE_USER_NAME} ]; then
              echo "commit done by ${GIT_MACHINE_USER_NAME}, skipping build"
              circleci step halt
            fi

jobs:
  version-bump:
    <<: *docker-image
    steps:
      - add_ssh_keys
      - checkout
      - check-commit-author
      - nate-orbs/node_version_bump:
          GIT_EMAIL: ${GIT_MACHINE_USER_EMAIL}
          GIT_USER: ${GIT_MACHINE_USER_NAME}

  test:
    <<: *docker-image
    steps:
      - add_ssh_keys
      - checkout
      - check-commit-author
      - run:
          name: Login to CodeArtifact npm repository
          command: aws codeartifact login --tool npm --domain nate-js --repository js --namespace @nate
      - run:
          name: Install node dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Build
          command: yarn tsc
      - run:
          name: Test
          command: yarn test

  infra-validate:
    <<: *docker-image
    steps:
      - checkout
      - run:
          name: Infrastructure validate
          command: bin/infra-validate

  infra-plan:
    <<: *docker-image
    steps:
      - checkout
      - run:
          name: Infrastructure plan
          command: bin/infra-plan $APP_ENV
      - persist_to_workspace:
          root: .
          paths:
            - infrastructure/terraform-plan.out      

  build-deploy:
    <<: *docker-image
    steps:
      - checkout
      - check-commit-author
      - add_ssh_keys
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Login to CodeArtifact npm repository
          command: aws codeartifact login --tool npm --domain nate-js --repository js --namespace @nate
      - run:
          name: Install dependencies
          command: yarn
      - attach_workspace:
          at: .
      - run:
          name: Build, tag and deploy
          command: |
            bin/infra-create $APP_ENV $CIRCLE_BUILD_NUM

workflows:
  version: 2.1
  develop_test-wf:
    jobs:
      - test:
          context: dev_eu-west-1
          <<: *pr_filters
      - infra-validate:
          context: dev_eu-west-1
          <<: *pr_filters

  dev_build_test_deploy-wf:
    jobs:
      - test:
          context: dev_eu-west-1
          <<: *dev_filters

      - version-bump:
          context: dev_eu-west-1
          requires:
            - test
          <<: *dev_filters

      - build-deploy:
          context: dev_eu-west-1
          requires:
            - version-bump
          <<: *dev_filters

  staging_build_test_deploy-wf:
    jobs:
      - test:
          context: staging_eu-west-1
          <<: *staging_filters

      - build-deploy:
          context: staging_eu-west-1
          requires:
            - test
          <<: *staging_filters

  prod_build_test_deploy-wf:
    jobs:
      - test:
          context: prod_eu-west-1
          <<: *prod_filters

      - infra-plan:
          context: prod_eu-west-1
          requires:
            - test
          <<: *prod_filters

      - infra-approve:
          context: prod_eu-west-1
          type: approval
          requires:
            - infra-plan
          <<: *prod_filters

      - build-deploy:
          context: prod_eu-west-1
          requires:
            - infra-approve
          <<: *prod_filters
