#!/usr/bin/env bash

set -eu

echo "NATE: Installing CLI tools ... "

unameOut="$(uname -s)"

case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac

if [ "$machine" = "Linux" ]; then 
  flavour=$(lsb_release -si)
  
  # Ubuntu

  if [ "$flavour" = "Ubuntu" ]; then

    # direnv
    if ! grep -q 'eval "$(direnv hook bash)"' "$HOME/.bashrc"; then
      curl -sfL https://direnv.net/install.sh | bash
      echo 'eval "$(direnv hook bash)"' >> $HOME/.bashrc
      source $HOME/.bashrc 
      direnv allow
      echo "  -> direnv successfully installed ..."
    else 
      echo "  -> direnv already installed ... "
    fi

    # jq
    if ! type "jq" > /dev/null; then
      sudo apt install jq -y
      echo "  -> jq successfully installed ... "
    else 
      echo "  -> jq already installed ... "
    fi

    # aws cli
    if ! type "aws" > /dev/null; then
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
      rm -rf awscliv2.zip
      rm -rf ./aws
      echo "  -> aws cli successfully installed ... "
    else 
      echo "  -> aws cli already installed ... "
    fi

    # terraform 
    if ! type "terraform" > /dev/null; then
      curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      sudo apt-get update
      sudo apt-get install terraform=0.13.1 -y
      echo "  -> terraform successfully installed ... "
    else 
      echo "  -> terraform already installed ... "
    fi

    # docker 
    if ! type "docker" > /dev/null; then
      sudo apt-get install \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      echo \
        "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      sudo apt-get update
      sudo apt-get install docker-ce docker-ce-cli containerd.io -y
      sudo docker run hello-world
      echo "  -> docker successfully installed ... "
    else 
      echo "  -> docker already installed ... "
    fi

    # docker compose
    if ! type "docker-compose" > /dev/null; then
      sudo apt install docker-compose -y
      source ~/.bashrc
      echo "  -> docker compose successfully installed ... "
    else 
      echo "  -> docker compose already installed ... "
    fi

    # kubectl 
    if ! type "kubectl" > /dev/null; then
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      sudo mv kubectl /usr/local/bin/kubectl
      sudo chmod +x /usr/local/bin/kubectl
      echo "  -> kubectl successfully installed ... "
    else 
      echo "  -> kubectl already installed ... "
    fi

    # nodejs
    if ! type "nvm" > /dev/null; then
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      nvm install v12
      echo "  -> nvm successfully installed ... "
    else 
      echo "  -> nvm already installed ... "
    fi

    # npm yarn
    if ! type "yarn" > /dev/null; then
      sudo npm install yarn -g 
      echo "  -> yarn successfully installed ... "
    else 
      echo "  -> yarn already installed ... "
    fi

    direnv allow

    exit 0

  fi

  # !!! Other Linux Flavours Contributors Wanted! :) !!!
  echo "You are probably using a flavour of linux that is not supported just yet, please contribute @ https://github.com/NateAI/nate.template.microservice.ts"
  exit 1

fi

# !!! Mac Contributors Wanted! :) !!!
if [ "$machine" = "Mac" ]; then 
  echo "You are probably using an apple, please contribute @ https://github.com/NateAI/nate.template.microservice.ts"
  exit 1
fi

# !!! Windows Contributors Wanted! :) !!!
echo "You are probably using windows, please contribute @ https://github.com/NateAI/nate.template.microservice.ts"
exit 1